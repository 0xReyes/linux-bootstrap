name: Secure Bastion Host Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      target_host:
        description: 'Bastion Host IP'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy Configuration
        uses: appleboy/ssh-action@v1.0.0
        id: deploy
        with:
          host: ${{ github.event.inputs.target_host || secrets.BASTION_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            CONFIG_DIR="/tmp/server-config-${{ github.run_id }}"
            mkdir -p "$CONFIG_DIR"
            
            # Copy configuration via tar (more reliable than individual files)
            tar -cf - . | ssh -o StrictHostKeyChecking=no \
              ${{ secrets.SSH_USER }}@${{ github.event.inputs.target_host || secrets.BASTION_HOST }} \
              "tar -xf - -C '$CONFIG_DIR'"
            
            # Execute configuration
            sudo bash "$CONFIG_DIR/scripts/bastion-setup.sh" "$CONFIG_DIR"
            
            # Prepare logs for download
            LOG_FILE="/var/log/server-config-$(date +%Y%m%d).log"
            [ -f "$LOG_FILE" ] && sudo chmod 644 "$LOG_FILE"

      - name: Download Logs
        if: always()
        run: |
          mkdir -p logs
          scp -o StrictHostKeyChecking=no \
            -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") \
            ${{ secrets.SSH_USER }}@${{ github.event.inputs.target_host || secrets.BASTION_HOST }}:/var/log/server-config-*.log logs/ || echo "No logs found"
          
          # If no logs, create empty file to prevent workflow failure
          [ -z "$(ls -A logs/)" ] && touch logs/no-logs-found.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bastion-logs-${{ github.run_id }}
          path: logs/
          retention-days: 3