name: Server Configuration Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test-configuration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Test Environment
        run: |
          mkdir -p test-config/{etc/ssh,etc/fail2ban,scripts,home/testuser/.ssh}
          cp etc/ssh/sshd_config test-config/etc/ssh/
          cp etc/fail2ban/jail.local test-config/etc/fail2ban/
          cp scripts/* test-config/scripts/
          echo "${{ secrets.TEST_SSH_PUBKEY }}" > test-config/home/testuser/.ssh/authorized_keys
          chmod 600 test-config/home/testuser/.ssh/authorized_keys
          chmod +x test-config/scripts/*.sh

      - name: Build Test Container
        run: docker build -t bastion-test .

      - name: Run Container Tests
        run: |
          docker run -d --name test-container -p 2222:22 \
            -v "$(pwd)/test-config:/tmp/server-config" bastion-test
          sleep 15  # Wait for services to start
          
          # Test SSH connectivity
          ssh -p 2222 -o StrictHostKeyChecking=no -o ConnectTimeout=5 \
            testuser@localhost echo "Container SSH test passed"
          
          # Verify services
          docker exec test-container sudo ufw status | grep "Status: active"
          docker exec test-container sudo fail2ban-client status sshd | grep "Status: active"

      - name: Cleanup Containers
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test-configuration
    if: ${{ github.ref == 'refs/heads/main' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Production Files
        run: |
          # Create production config structure
          mkdir -p production-config
          cp -r etc scripts home production-config/
          
          # Set permissions
          chmod 600 production-config/home/root/.ssh/authorized_keys
          chmod +x production-config/scripts/*.sh

      - name: Deploy to Server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "production-config/*"
          target: "/tmp/server-config"
          strip_components: 1

      - name: Run Production Setup
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo bash /tmp/server-config/scripts/bastion-setup.sh /tmp/server-config
            sudo rm -rf /tmp/server-config  # Cleanup after installation

      - name: Verify Production Setup
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo sshd -t
            sudo ufw status | grep "Status: active"
            sudo fail2ban-client status sshd | grep "Status: active"
            echo "Production configuration verified"